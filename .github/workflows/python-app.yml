# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:

    strategy:
      matrix:
        operating-system: ["ubuntu-latest"]
        python-version: ["3.7.1", "3.9"]

    runs-on: ${{ matrix.operating-system }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: false
        virtualenvs-path: ~/.virtualenvs
        installer-parallel: true

    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ secrets.CACHE_VERSION }}-${{ matrix.python-version }}-${{ matrix.operating-system }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ secrets.CACHE_VERSION }}-${{ matrix.python-version }}-${{ matrix.operating-system }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install Dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'
 
    - name: Test & Coverage
      run: poetry run coverage run --source=hsf -m pytest
    
    - name: Publish Coverage on CodeClimate
      uses: paambaati/codeclimate-action@v3.0.0
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: poetry run coverage xml
        coverageLocations: |
          ${{ github.workspace }}/coverage.xml:coverage.py
        debug: true

    - name: Publish Coverage on Codacy
      uses: codacy/codacy-coverage-reporter-action@v1.1.0
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        api-token: ${{ secrets.CODACY_API_TOKEN }}
        coverage-reports: ${{ github.workspace }}/coverage.xml 
